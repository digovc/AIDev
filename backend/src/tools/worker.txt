Launches a worker with access to:
- `glob`
- `grep`
- `ls`
- `file_read`
- `file_write`
- `file_edit`
- `file_multi_edit`

**When to Use:**
*   **Uncertain Searches:** For keyword or file searches where the exact match is unknown.
*   **Specific Keywords:** Recommended for keywords like "config" or "logger," or questions like "which file does X?"
*   **Parallel Tasks:** MUST use multiple workers for parallel steps (e.g., creating files, scaffolding code).

**When NOT to Use:**
*   **Specific File Read:** Use `file_read` or `glob` for faster results.
*   **Class Definitions:** Use `glob` to find "class Foo" definitions.
*   **Code Search in Few Files:** Use `file_read` for code within 2-3 specific files.
*   **Unsupported Actions:** Only call if the `worker` can perform the action with its available tools.
*   **Testing Implementations:** Workers CANNOT BE USED for testing or verification.

**Usage Notes:**
*   **Concurrency:** Launch multiple workers concurrently using a single message with multiple tool calls for maximum performance.
*   **Stateless:** Each worker invocation is stateless. No further messages can be sent to or from the worker after its final report.
*   **Detailed Prompts:** Provide highly detailed task descriptions, specifying exactly what information the worker should return in its report.
*   **Trust Outputs:** Worker outputs should generally be trusted.
*   **Explicit Intent:** Clearly state if the worker should write code or only perform research (search, file reads, etc.), as it is not aware of user intent.
